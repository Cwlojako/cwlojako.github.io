(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{238:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"什么是闭包-如何理解及使用闭包-看这一篇就完事"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包-如何理解及使用闭包-看这一篇就完事"}},[t._v("#")]),t._v(" 什么是闭包？如何理解及使用闭包？看这一篇就完事")]),t._v(" "),s("p",[t._v("相信大家都有个疑惑就是每次看完关于闭包的文章之后都发现自己能看懂，但每当要使用或者被面试官询问什么是闭包？什么时候使用闭包？等问题的时候都是一知半解")]),t._v(" "),s("p",[s("strong",[t._v("那么闭包到底是啥？")]),t._v("  先来个超简单的栗子")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onePiece")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lufei'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这里很显然全局作用域下并不能访问到函数局部作用域下的变量name,所以也打印不出lufei,而是报错显示name未定义，没有路飞这个人！")]),t._v(" "),s("p",[s("strong",[t._v("So,有什么办法让我们能访问到局部作用域下的变量呢？我们可以这样子")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onePiece")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lufei'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("allBlue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里两个括号是onePiece是返回一个allBlue函数，需要再次调用返回name")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onePiece")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("这样就可以返回到我们的name啦，因为函数在执行完毕后会释放，此时函数里的变量也会随之销毁，所以我们可以返回一个函数，在函数内部再返回变量，这就是传说中的闭包机制，通过闭包来实现局部变量的可持续使用。"),s("strong",[t._v("（当然，有人会有疑问，为什么不把变量定义在全局，这样不就都可以使用了吗？这也可以，但是在大型项目中不断定义全局变量会造成全局环境的污染，而且也容易产生命名冲突）")])]),t._v(" "),s("p",[t._v("打开谷歌调试也可以观察到闭包（closure）的产生,如图\n"),s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200312155139275.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDYxODA2OA==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[t._v("因此，依照上面的栗子，"),s("strong",[t._v("对于本人来说，我觉得闭包可以理解为把变量封闭在一个函数中进行保护，然后再向外return暴露。")])]),t._v(" "),s("p",[s("strong",[t._v("结论：\n1.什么是闭包？"),s("br"),t._v("\n实质上闭包就是一个可以访问到其他作用域变量的函数"),s("br"),t._v("\n2.什么时候使用闭包？"),s("br"),t._v("\n当一个局部作用域下的变量需要持续使用并且为了不污染全局环境，就可以使用闭包"),s("br"),t._v("\n3.闭包有什么优缺点？"),s("br"),t._v("\n优点：可以持续访问局部中的变量"),s("br"),t._v("\n缺点：占用内存，容易引起内存泄漏，闭包不容易被释放")])])])}),[],!1,null,null,null);s.default=e.exports}}]);